<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAk
        DQAAAk1TRnQBSQFMAgEBBQEAAYgBAAGIAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wMAAfMB8QHzCAAB/wH0
        MgAB9AH3AbwB7wHzBgAB/wKZARoxAAH0AQcB/wEHAe8B9AUAAbwDmTEAAf8BBwP3Ae8B/wMAAfEDmQH0
        MgAB/wG8A/cBBwH/AQAB8wOZAfM1AAHwA/cB8AH/A5kB8zcAAfMB9wEHAfQDmQHzOQAC8wEaApkB8zsA
        ARsCmQEbAfQB/wHzMgAB9AEHAfQDAAHzApkBGwHzAewC6wGSAf8wAAHsAesB7AH/AQAB/wH0AZkB8QH/
        AfcC6wHvAesB9zAAAewC6wHsAZIB6wG8Af8CAAH3AesBvAEAAfMB7DAAAfQB8QHsA+sBkgH/AgAB7wHr
        AfMCAAH/MgAB8QPrAfEDAAHzAusB8jQAAf8B9wLrAewB8gH/AgAB/wG8AQcB/zUAAfMBBwP3Ae8B/zUA
        CesJAAH/C/MB/xQAAfQCUQEAAfQBGwGZAXkBUQF0AwAB6wcJAesDAAH/AboB/wMAAQcCbQLqAhIBEwFm
        ARQBZgEVAfcTAAH0AXQBeQFRAUsBUQFSA3kBUgH0AgAB6wcJAesDAAEJAbQBCQMAAa4B9An/AfQBZgUA
        AfQB8gH/AwAC8wYAAXQBeQGaAlEGeQF0AgAJ6wIAAfMDtAHzAgABrgH/AnMBUAFKAewBSgFQAnMB/wEU
        BAAB9AO9Af8BAAHzAv8B8QUAAVICmgJRBHkCegFSAgAB6weTAesEAAG0BAABrgH/AXMBeQF4AVAB8AGY
        AXgBeQFzAf8BEwQAAb0BFgFGAr0B8wH/AkYB/wH0BAABUgKaAVEBcwF0AnkDegFSAgAB6weTAesEAAG0
        BAAB7AH/AXMBeQF4AXMCGQFQAXgBSgH/ARIEAAHzAW8CRgG9Af8DRgH/AfQEAAFSApoCUQFzAXkCegKa
        AVICAAnrBAABtAIAAf8B9AHtAfEBcwF5AXMBkgL0AZgBcgFtAf8B6gUAAfMBbwVGAf8B8wUAAVgBmgGg
        AXkBUQF0AnoCmgJ5AgAB6weaAesEAAG0AgAC9AEaAfMBUAEaAfQB8wEcAfQCGQHtAf8BbQYAAfMBbwNG
        Af8B8wYAAVgDoAFRAXMBegOaAVgB9AIAAesHmgH0Af8GAAH0AZMBRQGTARsBGgFGAZMB8AFyAfABGQHt
        Af8BbQUAAfMB/wRGAr0B/wUAAVgDoAFSAXQEmgFYAwAI6wH/AusFAAH0AW8CRQGTAUYBRQFGAfQCmAEZ
        Ae0B/wHrBAAB8wH/A0YBbwJGAr0B/wQAAXkDoAFSAXQEmgFYAwAB6wXyAfQC/wLrBQAC9AFvA0UBRgEa
        ARsBmQHvAfAB7AH/Aa4EAAH0A0YB/wHzAW8CRgG9AfQEAAF5A6ABUgF0BJoBeQMAAesF8gH/BusDAAL0
        ARoDRQGTARsDcgLsAf8BrgQAAr0BRgH/AfMBAAHzAW8BRgHzAf8EAAF5A6ABUgF5BJoBeQMABusB/wbr
        AwAB8wEaAUYERQGTAfMB9AT/AewFAAG9AfQB8wMAAvMB/wUAAXkDoAFSAXkEmgF5AwAB6wW8AfQC/wLr
        BQAB/wFGAUUBRgEaAW8BRQFGAf8B7wL3Au0B8BMAAXkCoAF5AVgFmgF5AwAB6we8Af8C6wUAAfQBkwFG
        ARoB/wH0AW8BGgH/GQABeQGgCXkDAAjrAfQIAAH0Af8B9AEAAfQD/xkAAXoDeQKZAhsC9AH/AwABQgFN
        AT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/wEAAccB+QYAAYMB8AYAAYEB8AYAAYAB4AYA
        AcABQQYAAfABAwYAAfgBBwYAAfwBDwYAAf4BAwYAARwHAAEICAABxAcAAcYGAAHBAcMGAAHAAWEGAAHw
        AR8HAAF/AcABAQL/AeIBBwEAAXEBwAEBAv8BwAEDAQABcQHAAQEB8QHPAcABAwEAAWABwAEBAeABhwHA
        AQMBAAF7AcABAQHgAQMBwAEDAQABewHAAQEB4AEDAcABAwEAAXsBAAEBAfABBwHAAQMBAAF7AQABAQH4
        AQ8BwAEDAQABPwEAAQEB8AEHAcABBwEAAR8BAAEBAeABAwHAAQcBAAEfAQABAQHgAQMBwAEHAQABBwEA
        AQEB4AGDAcABBwEAAQcBAAEBAfEBxwHAAQcBAAEfAQABAQL/AcABBwEAAR8BAAF/Av8BwAEHAQABfwGI
        AX8C/wHAAQcL
</value>
  </data>
</root>